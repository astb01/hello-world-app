name: 'Develop Workflow'

on:
  push:
    branches:
      - develop

permissions:
  contents: read

jobs:
  lint-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x, 17.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies    
        run: npm ci

      - name: Run Lint  
        run: npx eslint --ext .js,.jsx src/ --fix-dry-run

      - name: Run Tests
        uses: npm test -- --coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v3

      - name: Build
        run: rpm run build --if-present

  # tag-image:
  #   needs: lint-test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions-ecosystem/action-release-label@v1
  #       id: release-label
  #       if: ${{ github.event.pull_request.merged == true }}

  #     - uses: actions-ecosystem/action-get-latest-tag@v1
  #       id: get-latest-tag
  #       if: ${{ steps.release-label.outputs.level != null }}

  #     - uses: actions-ecosystem/action-bump-semver@v1
  #       id: bump-semver
  #       if: ${{ steps.release-label.outputs.level != null }}
  #       with:
  #         current_version: ${{ steps.get-latest-tag.outputs.tag }}
  #         level: ${{ steps.release-label.outputs.level }}

  #     - uses: actions-ecosystem/action-push-tag@v1
  #       if: ${{ steps.release-label.outputs.level != null }}
  #       with:
  #         tag: ${{ steps.bump-semver.outputs.new_version }}
  #         message: '${{ steps.bump-semver.outputs.new_version }}: PR #${{ github.event.pull_request.number }} ${{ github.event.pull_request.title }}'

  #     - name: Build and push Docker image
  #       uses: mr-smithers-excellent/docker-build-push@v5
  #       with:
  #         image: astb01/place-app-demo
  #         tags: latest, ${{ steps.get-latest-tag.outputs.tag }}-SNAPSHOT
  #         registry: docker.io
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}