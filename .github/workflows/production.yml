name: 'Production Workflow'

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  lint-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies    
        run: npm ci

      - name: Run Lint  
        run: npx eslint --ext .js,.jsx src/ --fix-dry-run

      - name: Run Tests
        run: npm test -- --coverage

      - name: Build
        run: npm run build --if-present

  preparetag:
      name: Prepare release tag
      needs: lint-test
      runs-on: ubuntu-latest
      outputs:
        sha_output: ${{ steps.short_sha_generator.outputs.SHORT_SHA }}
      steps:
        - name: Check out code
          uses: actions/checkout@v3
        - name: Get short SHA
          id: short_sha_generator
          run: echo "SHORT_SHA=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

  tag-image:
    name: Push to Docker & Deploy
    needs: preparetag
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      
      - run: npm install
      - run: echo "window['appConfig']={version:'${{ needs.preparetag.outputs.sha_output }}'}" > public/app-config.js
      - run: npm run build --if-present

      - name: Build and push Docker image
        uses: mr-smithers-excellent/docker-build-push@v5
        with:
          image: astb01/hello-world-app
          tags: latest, ${{ needs.preparetag.outputs.sha_output }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Deploy to PROD (Heroku)
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
          heroku_email: ${{ secrets.HEROKU_EMAIL }}
          heroku_app_name: 'hello-world-app-dev'
          branch: main
  
  # deploy:
  #   name: Deploy to server
  #   needs: tag-image
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: 'Development Code'
  #       uses: actions/checkout@v3

  #     - name: Use Node.js ${{ matrix.node-version }}
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'

  #     - run: npm install
  #     - run: echo "window['appConfig']={version:'${{ needs.preparetag.outputs.sha_output }}'}" > public/app-config.js
  #     - run: npm run build --if-present

  #     - name: Deploy to PROD (Heroku)
  #       uses: akhileshns/heroku-deploy@v3.12.12
  #       with:
  #         heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
  #         heroku_email: ${{ secrets.HEROKU_EMAIL }}
  #         heroku_app_name: 'hello-world-app-dev'
  #         branch: main